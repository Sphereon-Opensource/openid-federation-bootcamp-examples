{
	"info": {
		"_postman_id": "c5910b7c-f08c-461e-93be-a87eff8d5f6c",
		"name": "OpenID Federation Admin Server API",
		"description": "This API enables management of federated entity data and metadata within an OpenID Federation environment.\n\nContact Support:\n Name: Sphereon\n Email: info@sphereon.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17236702"
	},
	"item": [
		{
			"name": "accounts",
			"item": [
				{
					"name": "List all accounts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Retrieve a list of all accounts."
					},
					"response": [
						{
							"name": "Accounts retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"identifier\": \"https://h7^,/S^]?\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"identifier\": \"http://kCegv]cVC<\"\n  }\n]"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Register a new tenant account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"bootcampX\",\n  \"identifier\": \"https://bootcampX.federation.dev.findy.fi\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Endpoint for an admin to create a new account."
					},
					"response": [
						{
							"name": "Account created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"identifier\": \"http://EEf9:H])\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Conflict (e.g., account already exists)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Delete current account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Delete the account."
					},
					"response": [
						{
							"name": "Account deleted successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"username\": \"<string>\",\n  \"identifier\": \"http://EEf9:H])\"\n}"
						},
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"accounts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "keys",
			"item": [
				{
					"name": "{keyId}",
					"item": [
						{
							"name": "Revoke a key",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys/:keyId?reason=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys",
										":keyId"
									],
									"query": [
										{
											"key": "reason",
											"value": "<string>",
											"description": "The reason for revoking the key."
										}
									],
									"variable": [
										{
											"key": "keyId",
											"value": ""
										}
									]
								},
								"description": "Revoke a key by its ID for the specified account."
							},
							"response": [
								{
									"name": "Key revoked successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/keys/:keyId?reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"keys",
												":keyId"
											],
											"query": [
												{
													"key": "reason",
													"value": "<string>",
													"description": "The reason for revoking the key."
												}
											],
											"variable": [
												{
													"key": "keyId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"kty\": \"<string>\",\n  \"kid\": \"<string>\",\n  \"crv\": \"<string>\",\n  \"x\": \"<string>\",\n  \"y\": \"<string>\",\n  \"n\": \"<string>\",\n  \"e\": \"<string>\",\n  \"alg\": \"<string>\",\n  \"use\": \"<string>\",\n  \"x5u\": \"<uri>\",\n  \"x5c\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"x5t\": \"<string>\",\n  \"x5tS256\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"uuid\": \"<uuid>\",\n  \"account_id\": \"<integer>\",\n  \"revoked_at\": \"<dateTime>\",\n  \"revoked_reason\": \"<string>\",\n  \"created_at\": \"<dateTime>\"\n}"
								},
								{
									"name": "Invalid request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/keys/:keyId?reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"keys",
												":keyId"
											],
											"query": [
												{
													"key": "reason",
													"value": "<string>",
													"description": "The reason for revoking the key."
												}
											],
											"variable": [
												{
													"key": "keyId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Key or account not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/keys/:keyId?reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"keys",
												":keyId"
											],
											"query": [
												{
													"key": "reason",
													"value": "<string>",
													"description": "The reason for revoking the key."
												}
											],
											"variable": [
												{
													"key": "keyId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/keys/:keyId?reason=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"keys",
												":keyId"
											],
											"query": [
												{
													"key": "reason",
													"value": "<string>",
													"description": "The reason for revoking the key."
												}
											],
											"variable": [
												{
													"key": "keyId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List all keys",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"keys"
							]
						},
						"description": "Retrieve all keys associated with the specified account."
					},
					"response": [
						{
							"name": "Keys retrieved successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"kty\": \"<string>\",\n    \"kid\": \"<string>\",\n    \"crv\": \"<string>\",\n    \"x\": \"<string>\",\n    \"y\": \"<string>\",\n    \"n\": \"<string>\",\n    \"e\": \"<string>\",\n    \"alg\": \"<string>\",\n    \"use\": \"<string>\",\n    \"x5u\": \"<uri>\",\n    \"x5c\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"x5t\": \"<string>\",\n    \"x5tS256\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"uuid\": \"<uuid>\",\n    \"account_id\": \"<integer>\",\n    \"revoked_at\": \"<dateTime>\",\n    \"revoked_reason\": \"<string>\",\n    \"created_at\": \"<dateTime>\"\n  },\n  {\n    \"kty\": \"<string>\",\n    \"kid\": \"<string>\",\n    \"crv\": \"<string>\",\n    \"x\": \"<string>\",\n    \"y\": \"<string>\",\n    \"n\": \"<string>\",\n    \"e\": \"<string>\",\n    \"alg\": \"<string>\",\n    \"use\": \"<string>\",\n    \"x5u\": \"<uri>\",\n    \"x5c\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"x5t\": \"<string>\",\n    \"x5tS256\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"uuid\": \"<uuid>\",\n    \"account_id\": \"<integer>\",\n    \"revoked_at\": \"<dateTime>\",\n    \"revoked_reason\": \"<string>\",\n    \"created_at\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Account not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create a new key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"keys"
							]
						},
						"description": "Create a new key for the specified account."
					},
					"response": [
						{
							"name": "Key created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"kty\": \"<string>\",\n  \"kid\": \"<string>\",\n  \"crv\": \"<string>\",\n  \"x\": \"<string>\",\n  \"y\": \"<string>\",\n  \"n\": \"<string>\",\n  \"e\": \"<string>\",\n  \"alg\": \"<string>\",\n  \"use\": \"<string>\",\n  \"x5u\": \"<uri>\",\n  \"x5c\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"x5t\": \"<string>\",\n  \"x5tS256\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"uuid\": \"<uuid>\",\n  \"account_id\": \"<integer>\",\n  \"revoked_at\": \"<dateTime>\",\n  \"revoked_reason\": \"<string>\",\n  \"created_at\": \"<dateTime>\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"keys"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "metadata",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete account metadata",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metadata/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the metadata entry to be deleted."
										}
									]
								},
								"description": "Deletes a specific metadata entry for the specified account."
							},
							"response": [
								{
									"name": "Metadata deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"account_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"pariatur_2bb\": \"amet proident est esse\"\n  },\n  \"created_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\"\n}"
								},
								{
									"name": "Invalid request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Metadata not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/metadata/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"metadata",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get entity configuration metadata",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metadata"
							]
						},
						"description": "Retrieve metadata entries for a specified account."
					},
					"response": [
						{
							"name": "Successfully retrieved metadata",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"account_id\": \"<integer>\",\n    \"key\": \"<string>\",\n    \"metadata\": {\n      \"amet_37\": 91934428.8579529,\n      \"magnab79\": false,\n      \"irure7\": true,\n      \"culpa_05\": -33254356.15847785\n    },\n    \"created_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"account_id\": \"<integer>\",\n    \"key\": \"<string>\",\n    \"metadata\": {\n      \"elit97\": -46338699\n    },\n    \"created_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Account not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create entity configuration metadata",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"openid_credential_issuer\",\n  \"metadata\": {\n    \"credential_configurations_supported\": {\n        \"SD_JWT_VC_example_in_OpenID4VCI\": {\n            \"format\": \"dc+sd-jwt\",\n            \"scope\": \"SD_JWT_VC_example_in_OpenID4VCI\",\n            \"cryptographic_binding_methods_supported\": [\n                \"jwk\"\n            ],\n            \"credential_signing_alg_values_supported\": [\n                \"ES256\"\n            ],\n            \"display\": [\n                {\n                \"name\": \"IdentityCredential\",\n                \"logo\": {\n                    \"uri\": \"https://university.example.edu/public/logo.png\",\n                    \"alt_text\": \"a square logo of a university\"\n                },\n                \"locale\": \"en-US\",\n                \"background_color\": \"#12107c\",\n                \"text_color\": \"#FFFFFF\"\n                }\n            ],\n            \"proof_types_supported\": {\n                \"jwt\": {\n                \"proof_signing_alg_values_supported\": [\n                    \"ES256\"\n                ]\n                }\n            },\n            \"vct\": \"SD_JWT_VC_example_in_OpenID4VCI\",\n            \"claims\": [\n                {\n                \"path\": [\"given_name\"],\n                \"display\": [\n                    {\n                    \"name\": \"Given Name\",\n                    \"locale\": \"en-US\"\n                    },\n                    {\n                    \"name\": \"Vorname\",\n                    \"locale\": \"de-DE\"\n                    }\n                ]\n                },\n                {\n                \"path\": [\"family_name\"],\n                \"display\": [\n                    {\n                    \"name\": \"Surname\",\n                    \"locale\": \"en-US\"\n                    },\n                    {\n                    \"name\": \"Nachname\",\n                    \"locale\": \"de-DE\"\n                    }\n                ]\n                },\n                {\"path\": [\"email\"]},\n                {\"path\": [\"phone_number\"]},\n                {\n                \"path\": [\"address\"],\n                \"display\": [\n                    {\n                    \"name\": \"Place of residence\",\n                    \"locale\": \"en-US\"\n                    },\n                    {\n                    \"name\": \"Wohnsitz\",\n                    \"locale\": \"de-DE\"\n                    }\n                ]\n                },\n                {\"path\": [\"address\", \"street_address\"]},\n                {\"path\": [\"address\", \"locality\"]},\n                {\"path\": [\"address\", \"region\"]},\n                {\"path\": [\"address\", \"country\"]},\n                {\"path\": [\"birthdate\"]},\n                {\"path\": [\"is_over_18\"]},\n                {\"path\": [\"is_over_21\"]},\n                {\"path\": [\"is_over_65\"]}\n            ]\n            }\n        }\n    }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"metadata"
							]
						},
						"description": "Add a new metadata entry for the specified account."
					},
					"response": [
						{
							"name": "Metadata created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"account_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"pariatur_2bb\": \"amet proident est esse\"\n  },\n  \"created_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"metadata"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "authority-hints",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete an authority hint",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authority-hints/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the authority hint to be deleted."
										}
									]
								},
								"description": "Remove an authority hint by its ID for the specified account."
							},
							"response": [
								{
									"name": "Authority hint deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authority-hints/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authority-hints",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"identifier\": \"<string>\",\n  \"accountId\": \"<integer>\",\n  \"admin\": \"reprehenderit do\"\n}"
								},
								{
									"name": "Authority hint or account not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authority-hints/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authority-hints",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/authority-hints/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"authority-hints",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get authority hints",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/authority-hints",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authority-hints"
							]
						},
						"description": "Retrieve all authority hints for the specified account."
					},
					"response": [
						{
							"name": "Successfully retrieved authority hints",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authority-hints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"identifier\": \"<string>\",\n    \"accountId\": \"<integer>\",\n    \"admin\": 92440809.49653023\n  },\n  {\n    \"id\": \"<integer>\",\n    \"identifier\": \"<string>\",\n    \"accountId\": \"<integer>\",\n    \"admin\": false\n  }\n]"
						},
						{
							"name": "Account not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authority-hints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/authority-hints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create an authority hint",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifier\": \"https://bootcampZ.federation.dev.findy.fi\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/authority-hints",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authority-hints"
							]
						},
						"description": "Add a new authority hint for the specified account."
					},
					"response": [
						{
							"name": "Authority hint created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authority-hints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"identifier\": \"<string>\",\n  \"accountId\": \"<integer>\",\n  \"admin\": \"reprehenderit do\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authority-hints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/authority-hints",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authority-hints"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "entity-statement",
			"item": [
				{
					"name": "Get entity configuration statement object",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/entity-statement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entity-statement"
							]
						},
						"description": "Retrieve the entity configuration statement for the specified account."
					},
					"response": [
						{
							"name": "Successfully retrieved entity configuration statement",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entity-statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entity-statement"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"iss\": \"<string>\",\n  \"sub\": \"<string>\",\n  \"iat\": \"<integer>\",\n  \"exp\": \"<integer>\",\n  \"jwks\": {\n    \"keys\": [\n      {\n        \"kty\": \"<string>\",\n        \"kid\": \"<string>\",\n        \"crv\": \"<string>\",\n        \"x\": \"<string>\",\n        \"y\": \"<string>\",\n        \"n\": \"<string>\",\n        \"e\": \"<string>\",\n        \"alg\": \"<string>\",\n        \"use\": \"<string>\",\n        \"x5u\": \"<uri>\",\n        \"x5c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"x5t\": \"<string>\",\n        \"x5tS256\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"uuid\": \"<uuid>\",\n        \"account_id\": \"<integer>\",\n        \"revoked_at\": \"<dateTime>\",\n        \"revoked_reason\": \"<string>\",\n        \"created_at\": \"<dateTime>\"\n      },\n      {\n        \"kty\": \"<string>\",\n        \"kid\": \"<string>\",\n        \"crv\": \"<string>\",\n        \"x\": \"<string>\",\n        \"y\": \"<string>\",\n        \"n\": \"<string>\",\n        \"e\": \"<string>\",\n        \"alg\": \"<string>\",\n        \"use\": \"<string>\",\n        \"x5u\": \"<uri>\",\n        \"x5c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"x5t\": \"<string>\",\n        \"x5tS256\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"uuid\": \"<uuid>\",\n        \"account_id\": \"<integer>\",\n        \"revoked_at\": \"<dateTime>\",\n        \"revoked_reason\": \"<string>\",\n        \"created_at\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"sunta1d\": false,\n    \"Lorem9b\": \"quis qui \",\n    \"mollit_\": true\n  },\n  \"crit\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"authority_hints\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"trust_marks\": [\n    {\n      \"id\": \"<string>\",\n      \"trust_mark\": \"<string>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"trust_mark\": \"<string>\"\n    }\n  ],\n  \"trust_mark_issuers\": {\n    \"minim4\": [\n      \"<uri>\",\n      \"<uri>\"\n    ]\n  },\n  \"trust_mark_owners\": {\n    \"magna_c\": {\n      \"sub\": \"<string>\",\n      \"jwks\": [\n        {\n          \"kty\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"crv\": \"<string>\",\n          \"x\": \"<string>\",\n          \"y\": \"<string>\",\n          \"n\": \"<string>\",\n          \"e\": \"<string>\",\n          \"alg\": \"<string>\",\n          \"use\": \"<string>\",\n          \"x5u\": \"<uri>\",\n          \"x5c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"x5t\": \"<string>\",\n          \"x5tS256\": \"<string>\"\n        },\n        {\n          \"kty\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"crv\": \"<string>\",\n          \"x\": \"<string>\",\n          \"y\": \"<string>\",\n          \"n\": \"<string>\",\n          \"e\": \"<string>\",\n          \"alg\": \"<string>\",\n          \"use\": \"<string>\",\n          \"x5u\": \"<uri>\",\n          \"x5c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"x5t\": \"<string>\",\n          \"x5tS256\": \"<string>\"\n        }\n      ],\n      \"additionalProperties\": \"<string>\"\n    },\n    \"commodo0\": {\n      \"sub\": \"<string>\",\n      \"jwks\": [\n        {\n          \"kty\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"crv\": \"<string>\",\n          \"x\": \"<string>\",\n          \"y\": \"<string>\",\n          \"n\": \"<string>\",\n          \"e\": \"<string>\",\n          \"alg\": \"<string>\",\n          \"use\": \"<string>\",\n          \"x5u\": \"<uri>\",\n          \"x5c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"x5t\": \"<string>\",\n          \"x5tS256\": \"<string>\"\n        },\n        {\n          \"kty\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"crv\": \"<string>\",\n          \"x\": \"<string>\",\n          \"y\": \"<string>\",\n          \"n\": \"<string>\",\n          \"e\": \"<string>\",\n          \"alg\": \"<string>\",\n          \"use\": \"<string>\",\n          \"x5u\": \"<uri>\",\n          \"x5c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"x5t\": \"<string>\",\n          \"x5tS256\": \"<string>\"\n        }\n      ],\n      \"additionalProperties\": \"<string>\"\n    },\n    \"non_c\": {\n      \"sub\": \"<string>\",\n      \"jwks\": [\n        {\n          \"kty\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"crv\": \"<string>\",\n          \"x\": \"<string>\",\n          \"y\": \"<string>\",\n          \"n\": \"<string>\",\n          \"e\": \"<string>\",\n          \"alg\": \"<string>\",\n          \"use\": \"<string>\",\n          \"x5u\": \"<uri>\",\n          \"x5c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"x5t\": \"<string>\",\n          \"x5tS256\": \"<string>\"\n        },\n        {\n          \"kty\": \"<string>\",\n          \"kid\": \"<string>\",\n          \"crv\": \"<string>\",\n          \"x\": \"<string>\",\n          \"y\": \"<string>\",\n          \"n\": \"<string>\",\n          \"e\": \"<string>\",\n          \"alg\": \"<string>\",\n          \"use\": \"<string>\",\n          \"x5u\": \"<uri>\",\n          \"x5c\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"x5t\": \"<string>\",\n          \"x5tS256\": \"<string>\"\n        }\n      ],\n      \"additionalProperties\": \"<string>\"\n    }\n  }\n}"
						},
						{
							"name": "Account or entity statement not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entity-statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entity-statement"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/entity-statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entity-statement"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Sign and publish entity configuration statement",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dry-run\": \"true\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/entity-statement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"entity-statement"
							]
						},
						"description": "Sign and publish the entity configuration statement for the specified account. If `dry-run` is `true`, outputs the signed JWT without publishing it."
					},
					"response": [
						{
							"name": "Entity configuration statement published or validated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry-run\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/entity-statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entity-statement"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry-run\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/entity-statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entity-statement"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry-run\": \"<boolean>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/entity-statement",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"entity-statement"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "subordinates",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "jwks",
							"item": [
								{
									"name": "{jwkId}",
									"item": [
										{
											"name": "Delete subordinate JWK",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks/:jwkId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks",
														":jwkId"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) The ID of the subordinate."
														},
														{
															"key": "jwkId",
															"value": "<integer>",
															"description": "(Required) The ID of the JWK."
														}
													]
												},
												"description": "Delete a JWK associated with the specified subordinate."
											},
											"response": [
												{
													"name": "Subordinate JWK deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subordinates/:id/jwks/:jwkId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subordinates",
																":id",
																"jwks",
																":jwkId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "jwkId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"subordinate_id\": \"<integer>\",\n  \"key\": {\n    \"euf92\": true,\n    \"consequat_5e\": 78021912\n  },\n  \"created_at\": \"<dateTime>\"\n}"
												},
												{
													"name": "Invalid request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subordinates/:id/jwks/:jwkId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subordinates",
																":id",
																"jwks",
																":jwkId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "jwkId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subordinates/:id/jwks/:jwkId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subordinates",
																":id",
																"jwks",
																":jwkId"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "jwkId"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get subordinate JWKs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/1/jwks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												"1",
												"jwks"
											]
										},
										"description": "Retrieve all JWKs associated with the specified subordinate."
									},
									"response": [
										{
											"name": "Successfully retrieved JWKs",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"subordinate_id\": \"<integer>\",\n    \"key\": {\n      \"aliqua84\": 59576231.916804016,\n      \"pariatur_4f\": true,\n      \"ex_77\": \"in ad nulla\",\n      \"nisi_2\": \"non Excepteur\"\n    },\n    \"created_at\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"subordinate_id\": \"<integer>\",\n    \"key\": {\n      \"deserunt_be8\": -90588988.25687431,\n      \"ullamco4c\": 78435204,\n      \"sed_37_\": -97854913.13284159\n    },\n    \"created_at\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Create a subordinate JWK",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"kty\": \"EC\",\n    \"kid\": \"agZIh3ACFGFLFGlmeWl1MdzNGEE-Amlkk9n4uuFKX1Q\",\n    \"crv\": \"P-256\",\n    \"x\": \"z_sod_htlgkZjda3BUKbSkXQfiNpXiWD7l5Fgu3vEAc\",\n    \"y\": \"Czt_QjMeU_Mopc0HlmKV8fcbuRwsIkjZemrXXi1ioKc\",\n    \"alg\": \"ES256\",\n    \"use\": \"sig\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subordinates/1/jwks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												"1",
												"jwks"
											]
										},
										"description": "Create a JWK for the specified subordinate."
									},
									"response": [
										{
											"name": "Subordinate JWK created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"kty\": \"<string>\",\n  \"kid\": \"<string>\",\n  \"crv\": \"<string>\",\n  \"x\": \"<string>\",\n  \"y\": \"<string>\",\n  \"n\": \"<string>\",\n  \"e\": \"<string>\",\n  \"alg\": \"<string>\",\n  \"use\": \"<string>\",\n  \"x5u\": \"<uri>\",\n  \"x5c\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"x5t\": \"<string>\",\n  \"x5tS256\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"subordinate_id\": \"<integer>\",\n  \"key\": {\n    \"euf92\": true,\n    \"consequat_5e\": 78021912\n  },\n  \"created_at\": \"<dateTime>\"\n}"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"kty\": \"<string>\",\n  \"kid\": \"<string>\",\n  \"crv\": \"<string>\",\n  \"x\": \"<string>\",\n  \"y\": \"<string>\",\n  \"n\": \"<string>\",\n  \"e\": \"<string>\",\n  \"alg\": \"<string>\",\n  \"use\": \"<string>\",\n  \"x5u\": \"<uri>\",\n  \"x5c\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"x5t\": \"<string>\",\n  \"x5tS256\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"kty\": \"<string>\",\n  \"kid\": \"<string>\",\n  \"crv\": \"<string>\",\n  \"x\": \"<string>\",\n  \"y\": \"<string>\",\n  \"n\": \"<string>\",\n  \"e\": \"<string>\",\n  \"alg\": \"<string>\",\n  \"use\": \"<string>\",\n  \"x5u\": \"<uri>\",\n  \"x5c\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"x5t\": \"<string>\",\n  \"x5tS256\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/jwks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"jwks"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "statement",
							"item": [
								{
									"name": "Get subordinate statement object",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/1/statement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												"1",
												"statement"
											]
										},
										"description": "Retrieve the subordinate statement for the specified subordinate."
									},
									"response": [
										{
											"name": "Successfully retrieved subordinate statement",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/statement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"statement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"iss\": \"<string>\",\n  \"sub\": \"<string>\",\n  \"iat\": \"<integer>\",\n  \"exp\": \"<integer>\",\n  \"jwks\": {\n    \"keys\": [\n      {\n        \"kty\": \"<string>\",\n        \"kid\": \"<string>\",\n        \"crv\": \"<string>\",\n        \"x\": \"<string>\",\n        \"y\": \"<string>\",\n        \"n\": \"<string>\",\n        \"e\": \"<string>\",\n        \"alg\": \"<string>\",\n        \"use\": \"<string>\",\n        \"x5u\": \"<uri>\",\n        \"x5c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"x5t\": \"<string>\",\n        \"x5tS256\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"uuid\": \"<uuid>\",\n        \"account_id\": \"<integer>\",\n        \"revoked_at\": \"<dateTime>\",\n        \"revoked_reason\": \"<string>\",\n        \"created_at\": \"<dateTime>\"\n      },\n      {\n        \"kty\": \"<string>\",\n        \"kid\": \"<string>\",\n        \"crv\": \"<string>\",\n        \"x\": \"<string>\",\n        \"y\": \"<string>\",\n        \"n\": \"<string>\",\n        \"e\": \"<string>\",\n        \"alg\": \"<string>\",\n        \"use\": \"<string>\",\n        \"x5u\": \"<uri>\",\n        \"x5c\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"x5t\": \"<string>\",\n        \"x5tS256\": \"<string>\",\n        \"id\": \"<integer>\",\n        \"uuid\": \"<uuid>\",\n        \"account_id\": \"<integer>\",\n        \"revoked_at\": \"<dateTime>\",\n        \"revoked_reason\": \"<string>\",\n        \"created_at\": \"<dateTime>\"\n      }\n    ]\n  },\n  \"metadata\": {\n    \"Duis_8f\": 44713920\n  },\n  \"crit\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"metadata_policy\": {\n    \"sunt_6b\": 91607419.3212196\n  },\n  \"metadata_policy_crit\": {\n    \"eud\": false\n  },\n  \"source_endpoint\": \"<uri>\"\n}"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/statement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"statement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/statement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"statement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Sign and publish subordinate statement",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dry-run\": \"false\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subordinates/1/statement",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												"1",
												"statement"
											]
										},
										"description": "Sign and publish the subordinate statement for the specified subordinate. If `dry-run` is `true`, outputs the signed JWT without publishing it."
									},
									"response": [
										{
											"name": "Subordinate statement published successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dry-run\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/statement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"statement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "<string>"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dry-run\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/statement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"statement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dry-run\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:id/statement",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":id",
														"statement"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete subordinate",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subordinates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) The ID of the subordinate to be deleted."
										}
									]
								},
								"description": "Deletes a specific subordinate for the specified account."
							},
							"response": [
								{
									"name": "Subordinate deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Invalid request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Subordinate not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{subordinateId}",
					"item": [
						{
							"name": "metadata",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Delete subordinate metadata",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/1/metadata/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														"1",
														"metadata",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												},
												"description": "Delete metadata associated with the specified subordinate."
											},
											"response": [
												{
													"name": "Subordinate metadata deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subordinates",
																":subordinateId",
																"metadata",
																":id"
															],
															"variable": [
																{
																	"key": "subordinateId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<integer>\",\n  \"account_id\": \"<integer>\",\n  \"subordinate_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"aliquip95\": true,\n    \"occaecat293\": \"do nulla ut\"\n  },\n  \"created_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\"\n}"
												},
												{
													"name": "Invalid request",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subordinates",
																":subordinateId",
																"metadata",
																":id"
															],
															"variable": [
																{
																	"key": "subordinateId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
												},
												{
													"name": "Server error",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"subordinates",
																":subordinateId",
																"metadata",
																":id"
															],
															"variable": [
																{
																	"key": "subordinateId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get subordinate metadata",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/subordinates/1/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												"1",
												"metadata"
											]
										},
										"description": "Retrieve metadata associated with the specified subordinate."
									},
									"response": [
										{
											"name": "Successfully retrieved subordinate metadata",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":subordinateId",
														"metadata"
													],
													"variable": [
														{
															"key": "subordinateId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"account_id\": \"<integer>\",\n    \"subordinate_id\": \"<integer>\",\n    \"key\": \"<string>\",\n    \"metadata\": {\n      \"dolore_cbf\": -98885005\n    },\n    \"created_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"account_id\": \"<integer>\",\n    \"subordinate_id\": \"<integer>\",\n    \"key\": \"<string>\",\n    \"metadata\": {\n      \"magna_bf7\": \"Duis deserunt do\"\n    },\n    \"created_at\": \"<dateTime>\",\n    \"deleted_at\": \"<dateTime>\"\n  }\n]"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":subordinateId",
														"metadata"
													],
													"variable": [
														{
															"key": "subordinateId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":subordinateId",
														"metadata"
													],
													"variable": [
														{
															"key": "subordinateId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Create subordinate metadata",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/subordinates/1/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"subordinates",
												"1",
												"metadata"
											]
										},
										"description": "Create metadata for the specified subordinate."
									},
									"response": [
										{
											"name": "Subordinate metadata created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":subordinateId",
														"metadata"
													],
													"variable": [
														{
															"key": "subordinateId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<integer>\",\n  \"account_id\": \"<integer>\",\n  \"subordinate_id\": \"<integer>\",\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"aliquip95\": true,\n    \"occaecat293\": \"do nulla ut\"\n  },\n  \"created_at\": \"<dateTime>\",\n  \"deleted_at\": \"<dateTime>\"\n}"
										},
										{
											"name": "Invalid request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":subordinateId",
														"metadata"
													],
													"variable": [
														{
															"key": "subordinateId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Server error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \"<string>\",\n  \"metadata\": {\n    \"dolor89\": \"ipsum laboris\"\n  }\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/subordinates/:subordinateId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"subordinates",
														":subordinateId",
														"metadata"
													],
													"variable": [
														{
															"key": "subordinateId"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Get subordinates",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/subordinates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subordinates"
							]
						},
						"description": "Retrieve all subordinates associated with the specified account."
					},
					"response": [
						{
							"name": "Successfully retrieved subordinates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subordinates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"accountId\": \"<integer>\",\n    \"identifier\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"deletedAt\": \"<dateTime>\"\n  },\n  {\n    \"id\": \"<integer>\",\n    \"accountId\": \"<integer>\",\n    \"identifier\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"deletedAt\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subordinates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/subordinates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "Create a subordinate",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifier\": \"https://bootcampY.federation.dev.findy.fi\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/subordinates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"subordinates"
							]
						},
						"description": "Create a subordinate for the specified account."
					},
					"response": [
						{
							"name": "Subordinate created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subordinates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"accountId\": \"<integer>\",\n  \"identifier\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"deletedAt\": \"<dateTime>\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subordinates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/subordinates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"subordinates"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "trust-mark-types",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "issuers",
							"item": [
								{
									"name": "{issuerIdentifier}",
									"item": [
										{
											"name": "Remove Issuer from Trust Mark Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/trust-mark-types/:id/issuers/:issuerIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trust-mark-types",
														":id",
														"issuers",
														":issuerIdentifier"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"description": "(Required) Identifier of the Trust Mark Type."
														},
														{
															"key": "issuerIdentifier",
															"value": "<string>",
															"description": "(Required) Identifier of the issuer to be removed."
														}
													]
												},
												"description": "Remove an issuer from the specified Trust Mark Type."
											},
											"response": [
												{
													"name": "Issuer successfully removed from the Trust Mark Type.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/trust-mark-types/:id/issuers/:issuerIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"trust-mark-types",
																":id",
																"issuers",
																":issuerIdentifier"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issuerIdentifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"<string>\",\n  \"identifier\": \"<string>\"\n}"
												},
												{
													"name": "Account, Trust Mark Type, or Issuer not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "X-Account-Username",
																"value": "root",
																"description": "Optional account username to operate on behalf of"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/trust-mark-types/:id/issuers/:issuerIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"trust-mark-types",
																":id",
																"issuers",
																":issuerIdentifier"
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "issuerIdentifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get Issuers for a Trust Mark Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-mark-types",
												":id",
												"issuers"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Identifier of the Trust Mark Type."
												}
											]
										},
										"description": "Retrieve a list of issuers for the specified Trust Mark Type."
									},
									"response": [
										{
											"name": "A list of issuer identifiers.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trust-mark-types",
														":id",
														"issuers"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
										},
										{
											"name": "Account or Trust Mark Type not found.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trust-mark-types",
														":id",
														"issuers"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Add Issuer to Trust Mark Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"identifier\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-mark-types",
												":id",
												"issuers"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"description": "(Required) Identifier of the Trust Mark Type."
												}
											]
										},
										"description": "Add a new issuer to the specified Trust Mark Type."
									},
									"response": [
										{
											"name": "Issuer successfully added to the Trust Mark Type.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"identifier\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trust-mark-types",
														":id",
														"issuers"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<string>\",\n  \"identifier\": \"<string>\"\n}"
										},
										{
											"name": "Invalid request body.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"identifier\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trust-mark-types",
														":id",
														"issuers"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Account or Trust Mark Type not found.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"identifier\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/trust-mark-types/:id/issuers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"trust-mark-types",
														":id",
														"issuers"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get a Trust Mark Type by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-mark-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-mark-types",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Trust mark definition details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-mark-types/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-mark-types",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"identifier\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": -47975960.25048376\n}"
								}
							]
						},
						{
							"name": "Delete a Trust Mark Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-mark-types/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-mark-types",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Trust mark definition deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-mark-types/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-mark-types",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Get all Trust Mark Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trust-mark-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trust-mark-types"
							]
						}
					},
					"response": [
						{
							"name": "List of trust mark types",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-mark-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-mark-types"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"identifier\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": 44366052.128578156\n  },\n  {\n    \"id\": \"<integer>\",\n    \"identifier\": \"<string>\",\n    \"createdAt\": \"<dateTime>\",\n    \"updatedAt\": \"<dateTime>\",\n    \"name\": 61273473.90262115\n  }\n]"
						}
					]
				},
				{
					"name": "Create a Trust Mark Type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"identifier\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trust-mark-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trust-mark-types"
							]
						}
					},
					"response": [
						{
							"name": "Trust mark definition created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"identifier\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trust-mark-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-mark-types"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<integer>\",\n  \"identifier\": \"<string>\",\n  \"createdAt\": \"<dateTime>\",\n  \"updatedAt\": \"<dateTime>\",\n  \"name\": -47975960.25048376\n}"
						}
					]
				}
			]
		},
		{
			"name": "trust-marks",
			"item": [
				{
					"name": "{trustMarkId}",
					"item": [
						{
							"name": "Delete a Trust Mark",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-marks/:trustMarkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks",
										":trustMarkId"
									],
									"variable": [
										{
											"key": "trustMarkId",
											"value": "<string>",
											"description": "(Required) The identifier of the Trust Mark to be deleted."
										}
									]
								},
								"description": "Delete an existing Trust Mark for the specified account."
							},
							"response": [
								{
									"name": "Trust Mark deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-marks/:trustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-marks",
												":trustMarkId"
											],
											"variable": [
												{
													"key": "trustMarkId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Invalid request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-marks/:trustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-marks",
												":trustMarkId"
											],
											"variable": [
												{
													"key": "trustMarkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Trust Mark not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-marks/:trustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-marks",
												":trustMarkId"
											],
											"variable": [
												{
													"key": "trustMarkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Server error",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/trust-marks/:trustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"trust-marks",
												":trustMarkId"
											],
											"variable": [
												{
													"key": "trustMarkId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create or Update a Trust Mark",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dry_run\": false\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/trust-marks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trust-marks"
							]
						},
						"description": "Create or update a Trust Mark for the specified account."
					},
					"response": [
						{
							"name": "Trust Mark dry-run successful",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry_run\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"trustMarkId\": \"<string>\"\n}"
						},
						{
							"name": "Trust Mark created or updated successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry_run\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"trustMarkId\": \"<string>\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry_run\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dry_run\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "List Trust Marks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/trust-marks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"trust-marks"
							]
						},
						"description": "List all Trust Marks for the specified account."
					},
					"response": [
						{
							"name": "Successful fetch of Trust Marks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"trustMarkId\": \"<string>\",\n    \"trustMark\": \"<string>\",\n    \"entityId\": \"<string>\"\n  },\n  {\n    \"trustMarkId\": \"<string>\",\n    \"trustMark\": \"<string>\",\n    \"entityId\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"trust-marks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "received-trust-marks",
			"item": [
				{
					"name": "{receivedTrustMarkId}",
					"item": [
						{
							"name": "Delete a Received Trust Mark",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks/:receivedTrustMarkId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks",
										":receivedTrustMarkId"
									],
									"variable": [
										{
											"key": "receivedTrustMarkId",
											"value": "<string>",
											"description": "(Required) The unique identifier of the received Trust Mark to be deleted."
										}
									]
								},
								"description": "Delete a specific received Trust Mark for the specified account."
							},
							"response": [
								{
									"name": "Received Trust Mark deleted successfully.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/received-trust-marks/:receivedTrustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"received-trust-marks",
												":receivedTrustMarkId"
											],
											"variable": [
												{
													"key": "receivedTrustMarkId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Invalid request parameters.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/received-trust-marks/:receivedTrustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"received-trust-marks",
												":receivedTrustMarkId"
											],
											"variable": [
												{
													"key": "receivedTrustMarkId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Received Trust Mark not found.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/received-trust-marks/:receivedTrustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"received-trust-marks",
												":receivedTrustMarkId"
											],
											"variable": [
												{
													"key": "receivedTrustMarkId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								},
								{
									"name": "Server error.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/received-trust-marks/:receivedTrustMarkId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"received-trust-marks",
												":receivedTrustMarkId"
											],
											"variable": [
												{
													"key": "receivedTrustMarkId"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create a Received Trust Mark",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"trustMarkTypeId\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/received-trust-marks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"received-trust-marks"
							]
						},
						"description": "Create or update a received Trust Mark for the specified account."
					},
					"response": [
						{
							"name": "Received Trust Mark created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trustMarkTypeId\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"trustMarkId\": \"<string>\"\n}"
						},
						{
							"name": "Invalid request parameters.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trustMarkTypeId\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"trustMarkTypeId\": \"<string>\",\n  \"jwt\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				},
				{
					"name": "List Received Trust Marks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/received-trust-marks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"received-trust-marks"
							]
						},
						"description": "Retrieve all received Trust Marks for the specified account."
					},
					"response": [
						{
							"name": "Successful fetch of received Trust Marks.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"trustMarkId\": \"<string>\",\n    \"trustMarkTypeId\": \"<string>\",\n    \"issuedJwt\": \"<string>\",\n    \"receivedAt\": \"<dateTime>\"\n  },\n  {\n    \"trustMarkId\": \"<string>\",\n    \"trustMarkTypeId\": \"<string>\",\n    \"issuedJwt\": \"<string>\",\n    \"receivedAt\": \"<dateTime>\"\n  }\n]"
						},
						{
							"name": "Invalid request parameters.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Server error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/received-trust-marks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"received-trust-marks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "status",
			"item": [
				{
					"name": "Check node status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Check the status of the Admin Node."
					},
					"response": [
						{
							"name": "Successful status check",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "logs",
			"item": [
				{
					"name": "severity",
					"item": [
						{
							"name": "{severity}",
							"item": [
								{
									"name": "Get logs by severity",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logs/severity/:severity?limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logs",
												"severity",
												":severity"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Maximum number of logs to return"
												}
											],
											"variable": [
												{
													"key": "severity",
													"value": "Error",
													"description": "(Required) Severity level to filter by"
												}
											]
										},
										"description": "Retrieve logs filtered by severity level"
									},
									"response": [
										{
											"name": "Successful retrieval of logs by severity",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/severity/:severity?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"severity",
														":severity"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "severity"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"severity\": \"Warn\",\n    \"message\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"timestamp\": \"<long>\",\n    \"throwable_message\": \"<string>\",\n    \"throwable_stacktrace\": \"<string>\",\n    \"metadata\": {\n      \"dolore_3\": -93377942.71805118\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"severity\": \"Info\",\n    \"message\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"timestamp\": \"<long>\",\n    \"throwable_message\": \"<string>\",\n    \"throwable_stacktrace\": \"<string>\",\n    \"metadata\": {\n      \"non_e23\": \"incididunt reprehenderit vol\",\n      \"ullamco_e\": 39659257\n    }\n  }\n]"
										},
										{
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/severity/:severity?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"severity",
														":severity"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "severity"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication information is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/severity/:severity?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"severity",
														":severity"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "severity"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "The user does not have permission to perform the requested operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/severity/:severity?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"severity",
														":severity"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "severity"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/severity/:severity?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"severity",
														":severity"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "severity"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "tag",
					"item": [
						{
							"name": "{tag}",
							"item": [
								{
									"name": "Get logs by tag",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "X-Account-Username",
												"value": "root",
												"description": "Optional account username to operate on behalf of"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/logs/tag/:tag?limit=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"logs",
												"tag",
												":tag"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "Maximum number of logs to return"
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "<string>",
													"description": "(Required) Tag to filter by"
												}
											]
										},
										"description": "Retrieve logs filtered by tag"
									},
									"response": [
										{
											"name": "Successful retrieval of logs by tag",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/tag/:tag?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"tag",
														":tag"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "tag"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"severity\": \"Warn\",\n    \"message\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"timestamp\": \"<long>\",\n    \"throwable_message\": \"<string>\",\n    \"throwable_stacktrace\": \"<string>\",\n    \"metadata\": {\n      \"dolore_3\": -93377942.71805118\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"severity\": \"Info\",\n    \"message\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"timestamp\": \"<long>\",\n    \"throwable_message\": \"<string>\",\n    \"throwable_stacktrace\": \"<string>\",\n    \"metadata\": {\n      \"non_e23\": \"incididunt reprehenderit vol\",\n      \"ullamco_e\": 39659257\n    }\n  }\n]"
										},
										{
											"name": "Invalid request parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/tag/:tag?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"tag",
														":tag"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "tag"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Authentication information is missing or invalid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/tag/:tag?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"tag",
														":tag"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "tag"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "The user does not have permission to perform the requested operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/tag/:tag?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"tag",
														":tag"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "tag"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										},
										{
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "X-Account-Username",
														"value": "root",
														"description": "Optional account username to operate on behalf of"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/logs/tag/:tag?limit=100",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"logs",
														"tag",
														":tag"
													],
													"query": [
														{
															"key": "limit",
															"value": "100",
															"description": "Maximum number of logs to return"
														}
													],
													"variable": [
														{
															"key": "tag"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Get recent logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Account-Username",
								"value": "root",
								"description": "Optional account username to operate on behalf of"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/logs?limit=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"logs"
							],
							"query": [
								{
									"key": "limit",
									"value": "100",
									"description": "Maximum number of logs to return"
								}
							]
						},
						"description": "Retrieve the most recent logs from the system"
					},
					"response": [
						{
							"name": "Successful retrieval of logs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs?limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Maximum number of logs to return"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<integer>\",\n    \"severity\": \"Warn\",\n    \"message\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"timestamp\": \"<long>\",\n    \"throwable_message\": \"<string>\",\n    \"throwable_stacktrace\": \"<string>\",\n    \"metadata\": {\n      \"dolore_3\": -93377942.71805118\n    }\n  },\n  {\n    \"id\": \"<integer>\",\n    \"severity\": \"Info\",\n    \"message\": \"<string>\",\n    \"tag\": \"<string>\",\n    \"timestamp\": \"<long>\",\n    \"throwable_message\": \"<string>\",\n    \"throwable_stacktrace\": \"<string>\",\n    \"metadata\": {\n      \"non_e23\": \"incididunt reprehenderit vol\",\n      \"ullamco_e\": 39659257\n    }\n  }\n]"
						},
						{
							"name": "Invalid request parameters",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs?limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Maximum number of logs to return"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Authentication information is missing or invalid",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs?limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Maximum number of logs to return"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "The user does not have permission to perform the requested operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs?limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Maximum number of logs to return"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						},
						{
							"name": "Internal server error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Account-Username",
										"value": "root",
										"description": "Optional account username to operate on behalf of"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/logs?limit=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"logs"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "Maximum number of logs to return"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\",\n  \"message\": \"<string>\",\n  \"status\": \"<integer>\",\n  \"timestamp\": \"<integer>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Get Bearer token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "openid-client",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "th1s1s4s3cr3tth4tMUSTb3ch4ng3d",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8082/realms/openid-federation/protocol/openid-connect/token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8082",
					"path": [
						"realms",
						"openid-federation",
						"protocol",
						"openid-connect",
						"token"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "bearerToken",
			"value": "",
			"type": "string"
		}
	]
}